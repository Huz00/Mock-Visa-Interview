{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabal\\\\OneDrive\\\\Documents\\\\Visa Mock\\\\Mock-Visa-Interview\\\\front-end\\\\src\\\\InterviewPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport WaveSurfer from 'wavesurfer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InterviewPage() {\n  _s();\n  const [userResponse, setUserResponse] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const location = useLocation();\n  const interviewerWaveformRef = useRef(null);\n  const intervieweeWaveformRef = useRef(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  useEffect(() => {\n    // Initialize wavesurfer for interviewer with a default audio file\n    const interviewerWaveform = WaveSurfer.create({\n      container: interviewerWaveformRef.current,\n      waveColor: '#4A90E2',\n      progressColor: '#333',\n      barWidth: 2,\n      height: 100\n    });\n\n    // Load the .wav file and play it automatically when the component is mounted\n    interviewerWaveform.load('/assets/demo.wav'); // Replace with the actual path to your .wav file\n    interviewerWaveform.on('ready', () => {\n      interviewerWaveform.play(); // Automatically play the audio\n    });\n    return () => interviewerWaveform.destroy(); // Clean up the waveform when the component is unmounted\n  }, []);\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const mediaRecorder = new MediaRecorder(stream);\n    mediaRecorderRef.current = mediaRecorder;\n    const intervieweeWaveform = WaveSurfer.create({\n      container: intervieweeWaveformRef.current,\n      waveColor: '#FF6347',\n      barWidth: 2,\n      height: 100\n    });\n    const audioChunks = [];\n    mediaRecorder.ondataavailable = event => {\n      audioChunks.push(event.data);\n    };\n    mediaRecorder.onstop = () => {\n      const audioBlob = new Blob(audioChunks);\n      const audioUrl = URL.createObjectURL(audioBlob);\n      intervieweeWaveform.load(audioUrl);\n    };\n    setIsRecording(true);\n    mediaRecorder.start();\n  };\n  const stopRecording = () => {\n    setIsRecording(false);\n    mediaRecorderRef.current.stop();\n  };\n  const handleSubmitResponse = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/interview', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          response: userResponse,\n          name: location.state.name // Pass the name and response to the backend\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to submit response');\n      }\n      const data = await response.json(); // Parse JSON response\n      setFeedback(data.feedback); // Set feedback received from the backend\n    } catch (error) {\n      console.error('Error submitting response:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-20\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl font-bold text-center mb-8\",\n      children: [\"Welcome, \", location.state.name, \". Let's start your interview!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-2xl font-semibold text-center mb-4\",\n      children: \"Interviewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: interviewerWaveformRef,\n      className: \"w-full mb-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-2xl font-semibold text-center mb-4\",\n      children: \"Interviewee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: intervieweeWaveformRef,\n      className: \"w-full mb-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      className: \"bg-red-500 text-white px-4 py-2 rounded\",\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      className: \"bg-green-500 text-white px-4 py-2 rounded\",\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: userResponse,\n      onChange: e => setUserResponse(e.target.value),\n      placeholder: \"Type your response here\",\n      className: \"border border-gray-300 w-full mt-4 p-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmitResponse,\n      className: \"bg-blue-500 text-white px-4 py-2 rounded mt-2\",\n      children: \"Submit Response\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), feedback && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Feedback: \", feedback]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(InterviewPage, \"IANggYLd5diqugbrjTLAq394Xao=\", false, function () {\n  return [useLocation];\n});\n_c = InterviewPage;\nexport default InterviewPage;\nvar _c;\n$RefreshReg$(_c, \"InterviewPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","WaveSurfer","jsxDEV","_jsxDEV","InterviewPage","_s","userResponse","setUserResponse","feedback","setFeedback","location","interviewerWaveformRef","intervieweeWaveformRef","isRecording","setIsRecording","mediaRecorderRef","interviewerWaveform","create","container","current","waveColor","progressColor","barWidth","height","load","on","play","destroy","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","intervieweeWaveform","audioChunks","ondataavailable","event","push","data","onstop","audioBlob","Blob","audioUrl","URL","createObjectURL","start","stopRecording","stop","handleSubmitResponse","response","fetch","method","headers","body","JSON","stringify","name","state","ok","Error","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/gabal/OneDrive/Documents/Visa Mock/Mock-Visa-Interview/front-end/src/InterviewPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport WaveSurfer from 'wavesurfer.js';\r\n\r\nfunction InterviewPage() {\r\n  const [userResponse, setUserResponse] = useState('');\r\n  const [feedback, setFeedback] = useState('');\r\n  const location = useLocation();  \r\n  const interviewerWaveformRef = useRef(null);\r\n  const intervieweeWaveformRef = useRef(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const mediaRecorderRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize wavesurfer for interviewer with a default audio file\r\n    const interviewerWaveform = WaveSurfer.create({\r\n      container: interviewerWaveformRef.current,\r\n      waveColor: '#4A90E2',\r\n      progressColor: '#333',\r\n      barWidth: 2,\r\n      height: 100,\r\n    });\r\n\r\n    // Load the .wav file and play it automatically when the component is mounted\r\n    interviewerWaveform.load('/assets/demo.wav');  // Replace with the actual path to your .wav file\r\n    interviewerWaveform.on('ready', () => {\r\n      interviewerWaveform.play();  // Automatically play the audio\r\n    });\r\n\r\n    return () => interviewerWaveform.destroy();  // Clean up the waveform when the component is unmounted\r\n  }, []);\r\n\r\n  const startRecording = async () => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    const mediaRecorder = new MediaRecorder(stream);\r\n    mediaRecorderRef.current = mediaRecorder;\r\n\r\n    const intervieweeWaveform = WaveSurfer.create({\r\n      container: intervieweeWaveformRef.current,\r\n      waveColor: '#FF6347',\r\n      barWidth: 2,\r\n      height: 100,\r\n    });\r\n\r\n    const audioChunks = [];\r\n    mediaRecorder.ondataavailable = (event) => {\r\n      audioChunks.push(event.data);\r\n    };\r\n\r\n    mediaRecorder.onstop = () => {\r\n      const audioBlob = new Blob(audioChunks);\r\n      const audioUrl = URL.createObjectURL(audioBlob);\r\n      intervieweeWaveform.load(audioUrl);\r\n    };\r\n\r\n    setIsRecording(true);\r\n    mediaRecorder.start();\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    setIsRecording(false);\r\n    mediaRecorderRef.current.stop();\r\n  };\r\n\r\n  const handleSubmitResponse = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/interview', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          response: userResponse,\r\n          name: location.state.name,  // Pass the name and response to the backend\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to submit response');\r\n      }\r\n\r\n      const data = await response.json();  // Parse JSON response\r\n      setFeedback(data.feedback);  // Set feedback received from the backend\r\n    } catch (error) {\r\n      console.error('Error submitting response:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-center mt-20\">\r\n      <h2 className=\"text-4xl font-bold text-center mb-8\">\r\n        Welcome, {location.state.name}. Let's start your interview!\r\n      </h2>\r\n\r\n      {/* Interviewer Subtitle */}\r\n      <h3 className=\"text-2xl font-semibold text-center mb-4\">\r\n        Interviewer\r\n      </h3>\r\n      <div ref={interviewerWaveformRef} className=\"w-full mb-5\"></div>\r\n\r\n      {/* Interviewee Subtitle */}\r\n      <h3 className=\"text-2xl font-semibold text-center mb-4\">\r\n        Interviewee\r\n      </h3>\r\n      <div ref={intervieweeWaveformRef} className=\"w-full mb-5\"></div>\r\n      \r\n      {isRecording ? (\r\n        <button onClick={stopRecording} className=\"bg-red-500 text-white px-4 py-2 rounded\">Stop Recording</button>\r\n      ) : (\r\n        <button onClick={startRecording} className=\"bg-green-500 text-white px-4 py-2 rounded\">Start Recording</button>\r\n      )}\r\n\r\n      <textarea\r\n        value={userResponse}\r\n        onChange={(e) => setUserResponse(e.target.value)}\r\n        placeholder=\"Type your response here\"\r\n        className=\"border border-gray-300 w-full mt-4 p-2\"\r\n      />\r\n      <button onClick={handleSubmitResponse} className=\"bg-blue-500 text-white px-4 py-2 rounded mt-2\">Submit Response</button>\r\n\r\n      {feedback && <p>Feedback: {feedback}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InterviewPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMa,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,sBAAsB,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC3C,MAAMa,sBAAsB,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC3C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMkB,gBAAgB,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAErCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMkB,mBAAmB,GAAGf,UAAU,CAACgB,MAAM,CAAC;MAC5CC,SAAS,EAAEP,sBAAsB,CAACQ,OAAO;MACzCC,SAAS,EAAE,SAAS;MACpBC,aAAa,EAAE,MAAM;MACrBC,QAAQ,EAAE,CAAC;MACXC,MAAM,EAAE;IACV,CAAC,CAAC;;IAEF;IACAP,mBAAmB,CAACQ,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAE;IAC/CR,mBAAmB,CAACS,EAAE,CAAC,OAAO,EAAE,MAAM;MACpCT,mBAAmB,CAACU,IAAI,CAAC,CAAC,CAAC,CAAE;IAC/B,CAAC,CAAC;IAEF,OAAO,MAAMV,mBAAmB,CAACW,OAAO,CAAC,CAAC,CAAC,CAAE;EAC/C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACzE,MAAMC,aAAa,GAAG,IAAIC,aAAa,CAACN,MAAM,CAAC;IAC/Cd,gBAAgB,CAACI,OAAO,GAAGe,aAAa;IAExC,MAAME,mBAAmB,GAAGnC,UAAU,CAACgB,MAAM,CAAC;MAC5CC,SAAS,EAAEN,sBAAsB,CAACO,OAAO;MACzCC,SAAS,EAAE,SAAS;MACpBE,QAAQ,EAAE,CAAC;MACXC,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,MAAMc,WAAW,GAAG,EAAE;IACtBH,aAAa,CAACI,eAAe,GAAIC,KAAK,IAAK;MACzCF,WAAW,CAACG,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC;IAC9B,CAAC;IAEDP,aAAa,CAACQ,MAAM,GAAG,MAAM;MAC3B,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACP,WAAW,CAAC;MACvC,MAAMQ,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACJ,SAAS,CAAC;MAC/CP,mBAAmB,CAACZ,IAAI,CAACqB,QAAQ,CAAC;IACpC,CAAC;IAED/B,cAAc,CAAC,IAAI,CAAC;IACpBoB,aAAa,CAACc,KAAK,CAAC,CAAC;EACvB,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BnC,cAAc,CAAC,KAAK,CAAC;IACrBC,gBAAgB,CAACI,OAAO,CAAC+B,IAAI,CAAC,CAAC;EACjC,CAAC;EAED,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBN,QAAQ,EAAE9C,YAAY;UACtBqD,IAAI,EAAEjD,QAAQ,CAACkD,KAAK,CAACD,IAAI,CAAG;QAC9B,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACP,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MAEA,MAAMrB,IAAI,GAAG,MAAMW,QAAQ,CAACW,IAAI,CAAC,CAAC,CAAC,CAAE;MACrCtD,WAAW,CAACgC,IAAI,CAACjC,QAAQ,CAAC,CAAC,CAAE;IAC/B,CAAC,CAAC,OAAOwD,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACE7D,OAAA;IAAK+D,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChChE,OAAA;MAAI+D,SAAS,EAAC,qCAAqC;MAAAC,QAAA,GAAC,WACzC,EAACzD,QAAQ,CAACkD,KAAK,CAACD,IAAI,EAAC,+BAChC;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGLpE,OAAA;MAAI+D,SAAS,EAAC,yCAAyC;MAAAC,QAAA,EAAC;IAExD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLpE,OAAA;MAAKqE,GAAG,EAAE7D,sBAAuB;MAACuD,SAAS,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAGhEpE,OAAA;MAAI+D,SAAS,EAAC,yCAAyC;MAAAC,QAAA,EAAC;IAExD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLpE,OAAA;MAAKqE,GAAG,EAAE5D,sBAAuB;MAACsD,SAAS,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAE/D1D,WAAW,gBACVV,OAAA;MAAQsE,OAAO,EAAExB,aAAc;MAACiB,SAAS,EAAC,yCAAyC;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAE3GpE,OAAA;MAAQsE,OAAO,EAAE7C,cAAe;MAACsC,SAAS,EAAC,2CAA2C;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAC/G,eAEDpE,OAAA;MACEuE,KAAK,EAAEpE,YAAa;MACpBqE,QAAQ,EAAGC,CAAC,IAAKrE,eAAe,CAACqE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACjDI,WAAW,EAAC,yBAAyB;MACrCZ,SAAS,EAAC;IAAwC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACFpE,OAAA;MAAQsE,OAAO,EAAEtB,oBAAqB;MAACe,SAAS,EAAC,+CAA+C;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAExH/D,QAAQ,iBAAIL,OAAA;MAAAgE,QAAA,GAAG,YAAU,EAAC3D,QAAQ;IAAA;MAAA4D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV;AAAClE,EAAA,CAvHQD,aAAa;EAAA,QAGHJ,WAAW;AAAA;AAAA+E,EAAA,GAHrB3E,aAAa;AAyHtB,eAAeA,aAAa;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}