{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabal\\\\OneDrive\\\\Documents\\\\Visa Mock\\\\Mock-Visa-Interview\\\\front-end\\\\src\\\\InterviewPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InterviewPage() {\n  _s();\n  const location = useLocation();\n  const interviewerCanvasRef = useRef(null);\n  const intervieweeCanvasRef = useRef(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [animationId, setAnimationId] = useState(null);\n  const [stream, setStream] = useState(null);\n\n  // Load and play interviewer's pre-recorded audio and show waveform\n  useEffect(() => {\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const loadInterviewerAudio = async () => {\n      try {\n        const audioElement = new Audio('/assets/demo.wav'); // Ensure the correct file path\n\n        audioElement.play(); // Auto-play the audio when the page is loaded\n\n        const analyser = audioContext.createAnalyser();\n        analyser.fftSize = 2048;\n        const source = audioContext.createMediaElementSource(audioElement);\n        source.connect(analyser);\n        analyser.connect(audioContext.destination);\n        const bufferLength = analyser.frequencyBinCount;\n        const dataArray = new Uint8Array(bufferLength);\n        const canvas = interviewerCanvasRef.current;\n        const canvasCtx = canvas.getContext('2d');\n        const drawWaveform = () => {\n          analyser.getByteTimeDomainData(dataArray);\n          canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n          canvasCtx.lineWidth = 2;\n          canvasCtx.strokeStyle = '#4A90E2';\n          canvasCtx.beginPath();\n          const sliceWidth = canvas.width * 1.0 / bufferLength;\n          let x = 0;\n          for (let i = 0; i < bufferLength; i++) {\n            const v = dataArray[i] / 128.0;\n            const y = v * canvas.height / 2;\n            if (i === 0) {\n              canvasCtx.moveTo(x, y);\n            } else {\n              canvasCtx.lineTo(x, y);\n            }\n            x += sliceWidth;\n          }\n          canvasCtx.lineTo(canvas.width, canvas.height / 2);\n          canvasCtx.stroke();\n          requestAnimationFrame(drawWaveform); // Keep animating the waveform\n        };\n        drawWaveform();\n      } catch (error) {\n        console.error('Error loading interviewer audio:', error);\n      }\n    };\n    loadInterviewerAudio();\n  }, []);\n\n  // Handle interviewee's audio recording and waveform generation\n  const startRecording = async () => {\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    setStream(stream);\n    const mediaRecorderInstance = new MediaRecorder(stream);\n    setMediaRecorder(mediaRecorderInstance);\n    const analyser = audioContext.createAnalyser();\n    analyser.fftSize = 2048;\n    const source = audioContext.createMediaStreamSource(stream);\n    source.connect(analyser);\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const canvas = intervieweeCanvasRef.current;\n    const canvasCtx = canvas.getContext('2d');\n    const drawWaveform = () => {\n      const animation = requestAnimationFrame(drawWaveform); // Store animation ID\n      setAnimationId(animation); // Keep track of animation frame\n      analyser.getByteTimeDomainData(dataArray);\n      canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n      canvasCtx.lineWidth = 2;\n      canvasCtx.strokeStyle = '#FF6347';\n      canvasCtx.beginPath();\n      const sliceWidth = canvas.width * 1.0 / bufferLength;\n      let x = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i] / 128.0;\n        const y = v * canvas.height / 2;\n        if (i === 0) {\n          canvasCtx.moveTo(x, y);\n        } else {\n          canvasCtx.lineTo(x, y);\n        }\n        x += sliceWidth;\n      }\n      canvasCtx.lineTo(canvas.width, canvas.height / 2);\n      canvasCtx.stroke();\n    };\n    drawWaveform();\n    setIsRecording(true);\n    mediaRecorderInstance.start();\n  };\n\n  // Stop recording and freeze the waveform\n  const stopRecording = () => {\n    if (mediaRecorder) {\n      mediaRecorder.stop();\n    }\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n    }\n    if (animationId) {\n      cancelAnimationFrame(animationId);\n    }\n    setIsRecording(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-20\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-8\",\n      children: [\"Welcome, \", location.state.name, \". Let's start your interview!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"Interviewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: interviewerCanvasRef,\n        width: \"600\",\n        height: \"150\",\n        className: \"border mb-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"Interviewee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: intervieweeCanvasRef,\n        width: \"600\",\n        height: \"150\",\n        className: \"border mb-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      className: \"bg-red-500 text-white px-4 py-2 rounded\",\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      className: \"bg-green-500 text-white px-4 py-2 rounded\",\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(InterviewPage, \"hU/nY8RwaliuK5tCWeMt8X5seOI=\", false, function () {\n  return [useLocation];\n});\n_c = InterviewPage;\nexport default InterviewPage;\nvar _c;\n$RefreshReg$(_c, \"InterviewPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","jsxDEV","_jsxDEV","InterviewPage","_s","location","interviewerCanvasRef","intervieweeCanvasRef","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","animationId","setAnimationId","stream","setStream","audioContext","window","AudioContext","webkitAudioContext","loadInterviewerAudio","audioElement","Audio","play","analyser","createAnalyser","fftSize","source","createMediaElementSource","connect","destination","bufferLength","frequencyBinCount","dataArray","Uint8Array","canvas","current","canvasCtx","getContext","drawWaveform","getByteTimeDomainData","clearRect","width","height","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","v","y","moveTo","lineTo","stroke","requestAnimationFrame","error","console","startRecording","navigator","mediaDevices","getUserMedia","audio","mediaRecorderInstance","MediaRecorder","createMediaStreamSource","animation","start","stopRecording","stop","getTracks","forEach","track","cancelAnimationFrame","className","children","state","name","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gabal/OneDrive/Documents/Visa Mock/Mock-Visa-Interview/front-end/src/InterviewPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction InterviewPage() {\r\n  const location = useLocation();\r\n  const interviewerCanvasRef = useRef(null);\r\n  const intervieweeCanvasRef = useRef(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n  const [animationId, setAnimationId] = useState(null);\r\n  const [stream, setStream] = useState(null);\r\n\r\n  // Load and play interviewer's pre-recorded audio and show waveform\r\n  useEffect(() => {\r\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n    const loadInterviewerAudio = async () => {\r\n      try {\r\n        const audioElement = new Audio('/assets/demo.wav'); // Ensure the correct file path\r\n\r\n        audioElement.play(); // Auto-play the audio when the page is loaded\r\n\r\n        const analyser = audioContext.createAnalyser();\r\n        analyser.fftSize = 2048;\r\n        const source = audioContext.createMediaElementSource(audioElement);\r\n        source.connect(analyser);\r\n        analyser.connect(audioContext.destination);\r\n\r\n        const bufferLength = analyser.frequencyBinCount;\r\n        const dataArray = new Uint8Array(bufferLength);\r\n\r\n        const canvas = interviewerCanvasRef.current;\r\n        const canvasCtx = canvas.getContext('2d');\r\n\r\n        const drawWaveform = () => {\r\n          analyser.getByteTimeDomainData(dataArray);\r\n\r\n          canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\r\n          canvasCtx.lineWidth = 2;\r\n          canvasCtx.strokeStyle = '#4A90E2';\r\n\r\n          canvasCtx.beginPath();\r\n          const sliceWidth = (canvas.width * 1.0) / bufferLength;\r\n          let x = 0;\r\n\r\n          for (let i = 0; i < bufferLength; i++) {\r\n            const v = dataArray[i] / 128.0;\r\n            const y = (v * canvas.height) / 2;\r\n\r\n            if (i === 0) {\r\n              canvasCtx.moveTo(x, y);\r\n            } else {\r\n              canvasCtx.lineTo(x, y);\r\n            }\r\n\r\n            x += sliceWidth;\r\n          }\r\n\r\n          canvasCtx.lineTo(canvas.width, canvas.height / 2);\r\n          canvasCtx.stroke();\r\n\r\n          requestAnimationFrame(drawWaveform); // Keep animating the waveform\r\n        };\r\n\r\n        drawWaveform();\r\n      } catch (error) {\r\n        console.error('Error loading interviewer audio:', error);\r\n      }\r\n    };\r\n\r\n    loadInterviewerAudio();\r\n  }, []);\r\n\r\n  // Handle interviewee's audio recording and waveform generation\r\n  const startRecording = async () => {\r\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    setStream(stream);\r\n    const mediaRecorderInstance = new MediaRecorder(stream);\r\n    setMediaRecorder(mediaRecorderInstance);\r\n\r\n    const analyser = audioContext.createAnalyser();\r\n    analyser.fftSize = 2048;\r\n    const source = audioContext.createMediaStreamSource(stream);\r\n    source.connect(analyser);\r\n\r\n    const bufferLength = analyser.frequencyBinCount;\r\n    const dataArray = new Uint8Array(bufferLength);\r\n\r\n    const canvas = intervieweeCanvasRef.current;\r\n    const canvasCtx = canvas.getContext('2d');\r\n\r\n    const drawWaveform = () => {\r\n      const animation = requestAnimationFrame(drawWaveform); // Store animation ID\r\n      setAnimationId(animation); // Keep track of animation frame\r\n      analyser.getByteTimeDomainData(dataArray);\r\n\r\n      canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\r\n      canvasCtx.lineWidth = 2;\r\n      canvasCtx.strokeStyle = '#FF6347';\r\n\r\n      canvasCtx.beginPath();\r\n      const sliceWidth = (canvas.width * 1.0) / bufferLength;\r\n      let x = 0;\r\n\r\n      for (let i = 0; i < bufferLength; i++) {\r\n        const v = dataArray[i] / 128.0;\r\n        const y = (v * canvas.height) / 2;\r\n\r\n        if (i === 0) {\r\n          canvasCtx.moveTo(x, y);\r\n        } else {\r\n          canvasCtx.lineTo(x, y);\r\n        }\r\n\r\n        x += sliceWidth;\r\n      }\r\n\r\n      canvasCtx.lineTo(canvas.width, canvas.height / 2);\r\n      canvasCtx.stroke();\r\n    };\r\n\r\n    drawWaveform();\r\n    setIsRecording(true);\r\n    mediaRecorderInstance.start();\r\n  };\r\n\r\n  // Stop recording and freeze the waveform\r\n  const stopRecording = () => {\r\n    if (mediaRecorder) {\r\n      mediaRecorder.stop();\r\n    }\r\n    if (stream) {\r\n      stream.getTracks().forEach((track) => track.stop());\r\n    }\r\n\r\n    if (animationId) {\r\n      cancelAnimationFrame(animationId);\r\n    }\r\n\r\n    setIsRecording(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-center mt-20\">\r\n      <h1 className=\"text-4xl font-bold mb-8\">Welcome, {location.state.name}. Let's start your interview!</h1>\r\n\r\n      {/* Interviewer Section */}\r\n      <h2 className=\"text-2xl font-semibold mb-4\">Interviewer</h2>\r\n      <div className=\"flex justify-center\">\r\n        <canvas ref={interviewerCanvasRef} width=\"600\" height=\"150\" className=\"border mb-5\"></canvas>\r\n      </div>\r\n\r\n      {/* Interviewee Section */}\r\n      <h2 className=\"text-2xl font-semibold mb-4\">Interviewee</h2>\r\n      <div className=\"flex justify-center\">\r\n        <canvas ref={intervieweeCanvasRef} width=\"600\" height=\"150\" className=\"border mb-5\"></canvas>\r\n      </div>\r\n\r\n      {isRecording ? (\r\n        <button onClick={stopRecording} className=\"bg-red-500 text-white px-4 py-2 rounded\">Stop Recording</button>\r\n      ) : (\r\n        <button onClick={startRecording} className=\"bg-green-500 text-white px-4 py-2 rounded\">Start Recording</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InterviewPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}